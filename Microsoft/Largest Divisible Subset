class Solution {
    public List<Integer> largestDivisibleSubset(int[] nums) {
        List<Integer> res = new ArrayList<>();
        int n = nums.length;
        int[] count = new int[n];
        int[] pre = new int[n];
        Arrays.sort(nums);
        int maxval = 0;
        int idx = -1;
        for(int i=0;i<n;i++){
            count[i] = 1;
            pre[i] = -1;
            for(int j=i-1;j>=0;j--){
                if(nums[i] % nums[j] == 0){
                    if(1 + count[j] > count[i]){
                        count[i] = count[j] + 1;
                        pre[i] = j;
                    }
                }
            }
            if(count[i] > maxval){
                maxval = count[i];
                idx = i;
            }
        }
        while(idx != -1){
            res.add(nums[idx]);
            idx = pre[idx];
        }
        return res;
    }
}
